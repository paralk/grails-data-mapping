A lower level API is provided by the plugin that is based on the [Spring Data Cassandra|http://projects.spring.io/spring-data-cassandra/] project.

Spring Data Cassandra provides a [CassandraTemplate|http://docs.spring.io/spring-data/cassandra/docs/1.0.4.RELEASE/api/org/springframework/data/cassandra/core/CassandraTemplate.html] with methods to execute statements using the regular [Cassandra Java Driver|http://www.datastax.com/documentation/developer/java-driver/2.0/common/drivers/introduction/introArchOverview_c.html]

To get hold of the @cassandraTemplate@ instance inside a controller or service simply define a @cassandraTemplate@ property. An example can be seen below:

{code}
def cassandraTemplate

def myAction = {
	def people = []
	people << new Person(firstName: "Fred", lastName: "Flintstone")
	people << new Person(firstName: "Barney", lastName: "Rubble")
	cassandraTemplate.insert(people)
}
{code}

You can also create a CQL or Java Driver statement and execute it using cassandraTemplate

{code}
Select personSelect = QueryBuilder.select().all().from("person")
List personList = cassandraTemplate.select(personSelect, Person.class)

String personCQL = "SELECT firstName FROM person"
List personList = cassandraTemplate.select(personCQL, Person.class)
{code}