To get started with GORM for Mongo you need configure it as a dependency in @BuildConfig.groovy@:

{code}
plugins {
	compile ':mongodb:3.0.0.RC1' // or whatever is the latest vesrion
}
{code}

With that done you need to set up a running MongoDB server. Refer to the [MongoDB Quick Start guide|http://www.mongodb.org/display/DOCS/Quickstart] for an explanation on how to startup a Mongo instance. Once installed, starting Mongo is typically a matter of executing the following command:

{code}
MONGO_HOME/bin/mongod
{code}

With the above command executed in a terminal window you should see output like the following appear:

{code}
Tue Mar 18 14:16:35.267 [initandlisten] db version v2.4.9
Tue Mar 18 14:16:35.267 [initandlisten] git version: 52fe0d21959e32a5bdbecdc62057db386e4e029c
Tue Mar 18 14:16:35.267 [initandlisten] build info: Darwin bs-osx-106-x86-64-2.10gen.cc 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:32:41 PDT 2011; root:xnu-1504.15.3~1/RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
Tue Mar 18 14:16:35.267 [initandlisten] allocator: system
Tue Mar 18 14:16:35.267 [initandlisten] options: {}
Tue Mar 18 14:16:35.268 [initandlisten] journal dir=/data/db/journal
Tue Mar 18 14:16:35.268 [initandlisten] recover : no journal files present, no recovery needed
Tue Mar 18 14:16:35.297 [websvr] admin web console waiting for connections on port 28017
Tue Mar 18 14:16:35.297 [initandlisten] waiting for connections on port 27017
{code}

As you can see the server is running on port 27017, but don't worry the Mongodb plugin for Grails will automatically configure itself to look for Mongodb on that port by default.

If you want to configure how Grails connects to Mongo then you can do so using the following settings in @grails-app/conf/DataSource.groovy@:

{code}
grails {
    mongo {
        host = "localhost"
        port = 27017
        username = "blah"
        password = "blah"
        databaseName = "foo"
    }
}
{code}
